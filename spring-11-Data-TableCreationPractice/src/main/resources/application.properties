#
#
## To connect out App to the database
## we need to provide url, username, password of db
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.username=sa
#spring.datasource.password=
#
#
#
##  providing on which database we are going to work
#spring.datasource.driver-class-name=org.h2.Driver
#
## letting know  hibernate on which platform we are working
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#
## by writing true we will be able to see all the SQL information on console
#spring.jpa.show-sql=true
#
## h2 is running on the browser(local host:8080). default end point,
## that we will be able to see the endpoint in the console
#spring.h2.console.enabled=true
#
## we can change the end point in the browser localhost:8080/cydeo
#spring.h2.console.path=/cydeo
#
#
## if you are working with postgres and other databases and
## to make data.sql & schema.sql to execute first you need to provide as "always"
#
## always initialize data.sql and schema.sql first
#spring.sql.init.mode=always
#
#spring.jpa.hibernate.ddl-auto=create
#
#
#
#

#POSTGRES DB
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=admin
#
#spring.jpa.show-sql=true
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.sql.init.mode=always
#
#spring.jpa.hibernate.ddl-auto=create


# first create the table then push the data
#spring.jpa.defer-datasource-initialization=true


spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=admin

spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.sql.init.mode=always

spring.jpa.hibernate.ddl-auto=create

spring.jpa.defer-datasource-initialization=true

